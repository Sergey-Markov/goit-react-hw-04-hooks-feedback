{"version":3,"sources":["Components/Section.js","Components/FeedbackCard/FeedbackOptions.js","Components/Statistics.js","Components/Notification.js","App.js","index.js"],"names":["Section","title","children","Button","options","onLeaveFeedback","map","option","type","onClick","className","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","percentage","setPercentage","useEffect","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","target","textContent","toLowerCase","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACxC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAEEC,KAAK,SACLC,QAASJ,EACTK,UAAU,aAJZ,SAMGH,GALIA,QCPF,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIN,UAAU,OAAd,UACE,qBAAIA,UAAU,aAAd,mBAAkCE,KAClC,qBAAIF,UAAU,aAAd,sBAAqCG,KACrC,qBAAIH,UAAU,aAAd,kBAAiCI,KACjC,qBAAIJ,UAAU,aAAd,oBAAmCK,KACnC,qBAAIL,UAAU,aAAd,gCACsBM,GAAsB,EAD5C,UCZS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICoEEC,MAhEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOL,EAAP,KAAcS,EAAd,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACJC,EAAmBhB,EAAME,EAAKD,GAC9BgB,EAAgCjB,EAAMG,KAC1C,CAACH,EAAME,EAAKD,EAASE,EAAOU,IAE9B,IAAMG,EAAqB,SAAChB,EAAME,EAAKD,GACrCW,EAAUZ,EAAOE,EAAMD,IAEnBgB,EAAkC,SAACjB,EAAMG,GAC7CW,EAAcI,KAAKC,MAAO,IAAMnB,EAAQG,KAuB1C,OACE,sBAAKL,UAAU,MAAf,UACE,cAACV,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAxBgB,SAAA2B,GAGtB,OAFcA,EAAEC,OAAOC,YAAYC,eAGjC,IAAK,OACHd,GAAQ,SAAAe,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,MACHb,GAAO,SAAAa,GAAS,OAAIA,EAAY,KAChC,MACF,IAAK,UACHd,GAAW,SAAAc,GAAS,OAAIA,EAAY,KACpC,MACF,QACE,aAaF,cAACpC,EAAD,CAASC,MAAM,aAAf,SACGc,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IAGtB,cAACR,EAAD,CAAcC,QAAQ,4BC3DhCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5700f91a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nSection.propTypes ={\r\n  title:PropTypes.string.isRequired,\r\n  children:PropTypes.element,\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => {\r\n        return (\r\n          <button\r\n            key={option}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n            className=\"App-button\"\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  options:PropTypes.array.isRequired,\r\n  onLeaveFeedback:PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className=\"list\">\r\n      <li className=\"list-items\">Good: {good}</li>\r\n      <li className=\"list-items\">Neutral: {neutral}</li>\r\n      <li className=\"list-items\">Bad: {bad}</li>\r\n      <li className=\"list-items\">Total: {total}</li>\r\n      <li className=\"list-items\">\r\n        Positive feedback: {positivePercentage || 0}%\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes={\r\n  good:PropTypes.number.isRequired,\r\n  neutral:PropTypes.number.isRequired,\r\n  bad:PropTypes.number.isRequired,\r\n  total:PropTypes.number.isRequired,\r\n  positivePercentage:PropTypes.number.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message:PropTypes.string.isRequired,\r\n};","import './App.css';\r\nimport Section from './Components/Section';\r\nimport Button from './Components/FeedbackCard/FeedbackOptions';\r\nimport Statistics from './Components/Statistics';\r\nimport Notification from './Components/Notification';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  \r\n  useEffect(()=>{\r\n        countTotalFeedback(good, bad, neutral);\r\n        countPositiveFeedbackPercentage(good, total);\r\n  },[good, bad, neutral, total, percentage]);\r\n\r\n  const countTotalFeedback = (good, bad, neutral) => {\r\n    setTotal( good + bad + neutral);\r\n  };\r\n  const countPositiveFeedbackPercentage = (good, total) => {\r\n    setPercentage(Math.round((100 * good) / total));\r\n  };\r\n\r\n  \r\n  const onLeaveFeedback = e => {\r\n    const value = e.target.textContent.toLowerCase();\r\n\r\n    switch (value) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Section title=\"Please leave feedback\">\r\n        <Button\r\n          options={['Good', 'Neutral', 'Bad']}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {total ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={percentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}