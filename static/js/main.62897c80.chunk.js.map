{"version":3,"sources":["Components/Section.js","Components/FeedbackCard/FeedbackOptions.js","Components/Statistics.js","Components/Notification.js","App.js","index.js"],"names":["Section","title","children","Button","options","onLeaveFeedback","map","option","type","onClick","className","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","percentage","Math","round","countPositiveFeedbackPercentage","e","target","textContent","toLowerCase","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACxC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAEEC,KAAK,SACLC,QAASJ,EACTK,UAAU,aAJZ,SAMGH,GALIA,QCPF,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIN,UAAU,OAAd,UACE,qBAAIA,UAAU,aAAd,mBAAkCE,KAClC,qBAAIF,UAAU,aAAd,sBAAqCG,KACrC,qBAAIH,UAAU,aAAd,kBAAiCI,KACjC,qBAAIJ,UAAU,aAAd,oBAAmCK,KACnC,qBAAIL,UAAU,aAAd,gCACsBM,GAAsB,EAD5C,UCZS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,IC+DEC,MA3Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KA6BMR,EA1BqB,SAACH,EAAME,EAAKD,GAErC,OADcD,EAAOE,EAAMD,EAyBfW,CAAmBZ,EAAMC,EAASC,GAC1CW,EAvBkC,SAACb,EAAMG,GAE7C,OADmBW,KAAKC,MAAO,IAAMf,EAAQG,GAsB5Ba,CAAgChB,EAAKG,GACxD,OACE,sBAAKL,UAAU,MAAf,UACE,cAACV,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAxBgB,SAAAwB,GAGtB,OAFcA,EAAEC,OAAOC,YAAYC,eAGjC,IAAK,OACHX,GAAQ,SAAAY,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,MACHV,GAAO,SAAAU,GAAS,OAAIA,EAAY,KAChC,MACF,IAAK,UACHX,GAAW,SAAAW,GAAS,OAAIA,EAAY,KACpC,MACF,QACE,aAaF,cAACjC,EAAD,CAASC,MAAM,aAAf,SACGc,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IAGtB,cAACR,EAAD,CAAcC,QAAQ,4BCtDhCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.62897c80.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            className=\"App-button\"\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nButton.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className=\"list\">\n      <li className=\"list-items\">Good: {good}</li>\n      <li className=\"list-items\">Neutral: {neutral}</li>\n      <li className=\"list-items\">Bad: {bad}</li>\n      <li className=\"list-items\">Total: {total}</li>\n      <li className=\"list-items\">\n        Positive feedback: {positivePercentage || 0}%\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport Section from './Components/Section';\nimport Button from './Components/FeedbackCard/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  \n\n  const countTotalFeedback = (good, bad, neutral) => {\n    const total = good + bad + neutral;    \n    return total;\n  };\n  const countPositiveFeedbackPercentage = (good, total) => {\n    const percentage = Math.round((100 * good) / total);\n    return percentage;\n  };\n\n  const onLeaveFeedback = e => {\n    const value = e.target.textContent.toLowerCase();\n\n    switch (value) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const total = countTotalFeedback(good, neutral, bad);\n  const percentage = countPositiveFeedbackPercentage(good,total)\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <Button\n          options={['Good', 'Neutral', 'Bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={percentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}